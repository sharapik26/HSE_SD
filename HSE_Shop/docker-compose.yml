services:
  frontend:
    container_name: frontend
    build:
      context: ./src/Frontend
    ports:
      - "3000:80"
    depends_on:
      - api-gateway

  postgres-db:
    image: postgres:15-alpine
    container_name: postgres-db
    restart: always
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=async_shop_db
    ports:
      - "5433:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

  payments-service:
    container_name: payments-service
    build:
      context: .
      dockerfile: src/PaymentsService/Dockerfile
    restart: on-failure
    depends_on:
      - postgres-db
      - rabbitmq
    ports:
      - "8001:8080"

  orders-service:
    container_name: orders-service
    build:
      context: .
      dockerfile: src/OrdersService/Dockerfile
    restart: on-failure
    depends_on:
      - postgres-db
      - rabbitmq
    ports:
      - "8002:8080"

  api-gateway:
    container_name: api-gateway
    build:
      context: .
      dockerfile: src/ApiGateway/Dockerfile
    restart: on-failure
    depends_on:
      - payments-service
      - orders-service
    ports:
      - "8000:8080"

volumes:
  postgres-data:
  rabbitmq-data: